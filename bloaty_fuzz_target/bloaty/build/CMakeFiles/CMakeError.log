Determining if the pthread_create exist failed with the following output:
Change Dir: /home/vagrant/touch_of_death/critial-data-trace/fuzzbench/benchmarks/bloaty_fuzz_target/bloaty/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_4fe1f/fast"
make: Warning: File 'Makefile' has modification time 27 s in the future
/usr/bin/make -f CMakeFiles/cmTC_4fe1f.dir/build.make CMakeFiles/cmTC_4fe1f.dir/build
make[1]: Entering directory '/home/vagrant/touch_of_death/critial-data-trace/fuzzbench/benchmarks/bloaty_fuzz_target/bloaty/build/CMakeFiles/CMakeTmp'
make[1]: Warning: File 'CMakeFiles/cmTC_4fe1f.dir/flags.make' has modification time 27 s in the future
Building C object CMakeFiles/cmTC_4fe1f.dir/CheckSymbolExists.c.o
/home/vagrant/touch_of_death/AFL/afl-clang-fast   -g -O0    -o CMakeFiles/cmTC_4fe1f.dir/CheckSymbolExists.c.o   -c /home/vagrant/touch_of_death/critial-data-trace/fuzzbench/benchmarks/bloaty_fuzz_target/bloaty/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
compile file:CheckSymbolExists.c
Linking C executable cmTC_4fe1f
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4fe1f.dir/link.txt --verbose=1
/home/vagrant/touch_of_death/AFL/afl-clang-fast -g -O0     CMakeFiles/cmTC_4fe1f.dir/CheckSymbolExists.c.o  -o cmTC_4fe1f 
/usr/bin/ld: CMakeFiles/cmTC_4fe1f.dir/CheckSymbolExists.c.o: in function `main':
/home/vagrant/touch_of_death/critial-data-trace/fuzzbench/benchmarks/bloaty_fuzz_target/bloaty/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: undefined reference to `pthread_create'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[1]: *** [CMakeFiles/cmTC_4fe1f.dir/build.make:87: cmTC_4fe1f] Error 1
make[1]: Leaving directory '/home/vagrant/touch_of_death/critial-data-trace/fuzzbench/benchmarks/bloaty_fuzz_target/bloaty/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_4fe1f/fast] Error 2

File /home/vagrant/touch_of_death/critial-data-trace/fuzzbench/benchmarks/bloaty_fuzz_target/bloaty/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

